name: release

on:
  push:
    tags:
      - v*

permissions: {}

jobs:
  image:
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: "service-a/go.mod"
          cache: false

      - uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9
        with:
          version: v0.15.0

      - name: Install cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3.9.1
        with:
          cosign-release: "v2.2.2"

      - name: Build and push
        id: publish-image
        env:
          IMAGE_VERSION: ${{ github.ref_name }}
          KO_DOCKER_REPO: "ghcr.io/${{ github.repository }}"
        run: |
          # Build and push without SBOM (we'll generate it separately)
          ko build --sbom=spdx --sbom-dir ./sboms --image-refs ./image-digest service-a/main.go --bare --platform linux/amd64 -t ${IMAGE_VERSION} \
            --image-label org.opencontainers.image.title=spffie-ambient-auth-service-a \
            --image-label org.opencontainers.image.description="A test service for Spffie Ambient Auth" \
            --image-label org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }} \
            --image-label org.opencontainers.image.revision=${{ github.sha }} \
            --image-label org.opencontainers.image.version=${IMAGE_VERSION} \
            --image-label org.opencontainers.image.created="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" 
          
          echo "IMAGE_DIGEST=$(cat ./image-digest | cut -d@ -f2)" >> $GITHUB_OUTPUT
          SBOM_FILE=$(find ./sboms -name "*.spdx.json" | head -n1)
          if [ -f "$SBOM_FILE" ]; then
            echo "SBOM_PATH=$SBOM_FILE" >> $GITHUB_OUTPUT
            echo "Found SBOM: $SBOM_FILE"
            echo "SBOM content preview:"
            cat "$SBOM_FILE"

            # TODO: Add SBOM enrichment here in the future
            # You can modify the SBOM file before attestation
            # For example: add custom metadata, vulnerability scan results, etc.

          else
            echo "Error: No SBOM file found"
            echo "Contents of sboms directory:"
            ls -la ./sboms/
            exit 1
          fi

      - name: Attest build provenance
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2
        id: attest
        with:
          subject-name: "ghcr.io/${{ github.repository }}"
          subject-digest: ${{ steps.publish-image.outputs.IMAGE_DIGEST }}
          push-to-registry: true

      - name: Sign and attach SBOM
        if: steps.publish-image.outputs.SBOM_PATH
        env:
          IMAGE_URI: "ghcr.io/${{ github.repository }}@${{ steps.publish-image.outputs.IMAGE_DIGEST }}"
        run: |
          cosign attest --yes --predicate ${{ steps.publish-image.outputs.SBOM_PATH }} --type spdxjson "${IMAGE_URI}"
